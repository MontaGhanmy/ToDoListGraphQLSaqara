### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  accessToken: String!
  user: User!
}

type Comment {
  id: ID!
  text: String!
  userId: ID!
}

input CommentInput {
  text: String!
  todoId: ID!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createComment(input: CommentInput!, where: ToDoWhereUniqueInput!): Comment
  createToDo(input: ToDoContentInput!): ToDo
  login(input: LoginInput!): AuthPayload!
  logout: User!
  refreshAuth: AuthPayload!
  removeToDo(where: ToDoWhereUniqueInput!): ToDo
  shareToDo(input: ToDoShareInput!, where: ToDoWhereUniqueInput!): ToDo
  signup(input: SignUpInput!): AuthPayload!
  updateToDo(input: ToDoContentInput!, where: ToDoWhereUniqueInput!): ToDo
}

type Query {
  todo(where: ToDoWhereUniqueInput!): ToDo
  todos: [ToDo!]!
}

input SignUpInput {
  email: String!
  name: String!
  password: String!
}

type ToDo {
  comments: [Comment!]
  content: String!
  id: ID!
  isDone: Boolean!
  userId: ID!
}

input ToDoContentInput {
  content: String!
  isDone: Boolean!
}

input ToDoShareInput {
  userId: ID!
}

input ToDoWhereUniqueInput {
  id: ID!
}

type User {
  email: String!
  id: ID!
  name: String!
  password: String!
}
